
/*
 * Main.eq
 * Generated by Eqela Studio 2.0b7.4
 */

public class Main: SEScene
{
  SESprite bg;
  SESprite fg;


  bool move_right=true;
  bool move_left=false;
  bool move_up=false;
  bool move_down=true;
  int speed;
  int bounce;
  SESprite text;
  SESprite gio;
  double rotation;
  String display;
  

  public void initialize(SEResourceCache rsc) {
    base.initialize(rsc);
    speed=100;
    rotation=0;
    display = "BOUNCE = %d".printf().add(Primitive.for_integer(bounce)).to_string();
    bg = add_sprite_for_color(Color.instance("white"), get_scene_width(), get_scene_height());
    bg.move(0,0);
        
    //fg = add_sprite_for_color(Color.instance("#FFCC00"), get_scene_width()*0.1, get_scene_height()*0.1);
    //fg.move(100,100);

   rsc.prepare_image("temp","gio",get_scene_width()*0.3, get_scene_height()*0.3);
		fg = add_sprite_for_image(SEImage.for_resource("temp"));
		fg.move(100,100);
    rsc.prepare_font("myfont","arial bold color=black",50);
    text=add_sprite_for_text(display, "myfont");
	text.move(0,get_scene_height()-text.get_height());
    
	}

    public void update(TimeVal dnow, double delta) {
    speed+=50;
    rotation+=MathConstant.M_PI/4/2/2;      
    fg.set_rotation(rotation);
    if(move_right) {
      fg.move(fg.get_x()+delta*speed,fg.get_y());
          if(fg.get_x()+fg.get_width()>get_scene_width()) {
	      move_right=false;
	      move_left=true;
	      speed=100;
	      bounce++;
          }
          display = "BOUNCE = %d".printf().add(Primitive.for_integer(bounce)).to_string();
	  	text.set_text(display, "myfont");
      }
      if(move_left) {
	    fg.move(fg.get_x()-delta*speed,fg.get_y());
	    if(fg.get_x() < 0) {
		move_right=true;
		move_left=false;
		speed=100;
		bounce++;
	    }
	    display = "BOUNCE = %d".printf().add(Primitive.for_integer(bounce)).to_string();
		text.set_text(display, "myfont");
        
	 }	
	  if(move_down) {
		fg.move(fg.get_x(), fg.get_y()+delta*speed);
	    if(fg.get_y()+fg.get_height()>get_scene_height()) {
		move_down=false;
		move_up=true;
		speed=100;
		bounce++;
	    }
	    display = "BOUNCE = %d".printf().add(Primitive.for_integer(bounce)).to_string();
		text.set_text(display, "myfont");
	}
	  if(move_up) {
		fg.move(fg.get_x(), fg.get_y()-delta*speed);
	    if(fg.get_y()<0) {
	    move_down=true;
	    move_up=false;
	    speed=100;
	    bounce++;
	    }
	    display = "BOUNCE = %d".printf().add(Primitive.for_integer(bounce)).to_string();
		text.set_text(display, "myfont");
	}	
  }
  
	public void set_rotation(double angle) {
		rotation=angle;
	}public double get_rotation() {
		return(rotation);
	}
}